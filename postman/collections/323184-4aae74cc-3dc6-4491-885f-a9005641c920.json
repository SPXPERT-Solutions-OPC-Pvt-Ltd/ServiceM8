{
	"info": {
		"_postman_id": "323184-4aae74cc-3dc6-4491-885f-a9005641c920",
		"name": "ServiceM8-Integration",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" width=\"2162\" height=\"1530\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows\n    \n\n## ðŸ“– API Scopes\n\n| Scope | Description |\n| --- | --- |\n| staff_locations | Access to real-time GPS information about staff |\n| staff_activity | Access to clock on, lunch break and clock off information about staff |\n| publish_sms | Access to send SMS messages to customers and/or staff on your behalf.Â **Note: sending SMS messages will incur account charges.** |\n| publish_email | Access to send Email messages to customers and/or staff on your behalf |\n| vendor | Access to basic account information |\n| vendor_logo | Access to account logo |\n| vendor_email | Access to account holder email address |\n| read_locations | Read-only access to Location Endpoint |\n| manage_locations | Full access to Location Endpoint |\n| read_staff | Read-only access to Staff Endpoint |\n| manage_staff | Full access to Staff Endpoint |\n| read_customers | Read-only access to Company Endpoint |\n| manage_customers | Full access to Company Endpoint |\n| read_customer_contacts | Read-only access to CompanyContact Endpoint |\n| manage_customer_contacts | Full access to CompanyContact Endpoint |\n| read_feedback | Read-only access to the Feedback Endpoint |\n| manage_feedback | Full access to the Feedback Endpoint |\n| read_jobs | Read-only access to Job Endpoint |\n| manage_jobs | Full access to Job Endpoint |\n| create_jobs | Ability to create jobs on behalf of account.Â **Note: creating jobs may incur account charges.** |\n| read_job_payments | Read-only access to JobPayment Endpoint |\n| manage_job_payments | Full access to JobPayment Endpoint |\n| read_job_contacts | Read-only access to JobContact Endpoint |\n| manage_job_contacts | Full access to JobContact Endpoint |\n| read_job_materials | Read-only access to JobMaterials Endpoint |\n| manage_job_materials | Full access to JobMaterials Endpoint |\n| read_job_categories | Read-only access to Categories Endpoint |\n| manage_job_categories | Full access to Categories Endpoint |\n| read_job_checklists | Read-only access to Job Checklists Endpoint |\n| manage_job_checklists | Full access to Job Checklists Endpoint |\n| read_job_queues | Read-only access to Job Queues Endpoint |\n| manage_job_queues | Full access to Job Queues Endpoint |\n| read_tasks | Read-only access to Tasks Endpoint |\n| manage_tasks | Full access to Tasks Endpoint |\n| read_schedule | Read-only access to JobActivity and JobAllocation Endpoints |\n| manage_schedule | Full access to JobActivity and JobAllocation Endpoints |\n| read_security_roles | Read-only access to SecurityRole Endpoint |\n| read_inventory | Read-only access to Materials and MaterialBundles Endpoint |\n| manage_inventory | Full access to Materials and MaterialBundles Endpoint |\n| read_job_notes | Read-only access to job notes |\n| publish_job_notes | Ability to add new job notes |\n| read_job_photos | Read-only access to job photos |\n| publish_job_photos | Ability to add new job photos |\n| read_job_attachments | Read-only access to existing job attachments, quotes and invoices |\n| publish_job_attachments | Ability to add new file attachments to jobs |\n| read_inbox | Read-only access to inbox messages |\n| read_messages | Read-only access to staff messages |\n| manage_notifications | Ability to read notifications and mark as read |\n| manage_templates | Full access to email, sms and document templates |\n| manage_badges | Full access to create/modify job badges |\n| read_assets | Read-only access to Assets, AssetType and AssetTypeField endpoints |\n| manage_assets | Full access to Asset, AssetType and AssetTypeField endpoints |\n| read_forms | Read-only access to Forms, FormResponse endpoints |\n| manage_forms | Full access to Forms, FormResponse endpoints |\n| read_tax_rates | Read-only access to TaxRate endpoint |\n| manage_tax_rates | Full access to TaxRate endpoint |\n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Jobs",
			"item": [
				{
					"name": "Active Jobs",
					"id": "323184-18549751-c6f2-43a5-b799-927fe5343965",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/job.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"job.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Status Filter",
					"id": "323184-5ea04be8-464b-4a67-91d3-135f44408d08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/job.json?$filter=status eq 'Work Order'",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"job.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "status eq 'Work Order'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Date Filter",
					"id": "323184-f52b5a5e-d63f-4047-b1f4-f2234495976d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/job.json?$filter=status eq 'Work Order'",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"job.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "status eq 'Work Order'"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "323184-c13c8fa4-f717-4ad9-9f15-a9a71160a345",
			"description": "Get job details from ServiceM8 instance. Use this collection example to filter based on different fields available for a job request."
		},
		{
			"name": "Clients/Company",
			"item": [
				{
					"name": "Active Company",
					"id": "323184-d50defa8-49b0-4244-b380-fe73e9d54a2b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/company.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"company.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Name",
					"id": "323184-9b28d0a4-1d81-4542-8be9-2fbc54897cf1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/company.json?$filter=name eq 'SPXPERT'",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"company.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "name eq 'SPXPERT'"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "323184-0136da31-48b1-4ccf-828e-acadd156ab5c",
			"description": "Use this collection to get ServiceM8 Clients/ Customer details. Use different filters to slice and dice customer data"
		},
		{
			"name": "Material",
			"item": [
				{
					"name": "Active Materials",
					"id": "323184-bd12ef22-02c6-48ca-8af7-fd4d015567b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/material.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"material.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Name",
					"id": "323184-384b22cd-6b29-4e56-96f1-5d45f9547669",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/material.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"material.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Price",
					"id": "323184-a9a55a58-a94d-46d4-b2eb-6445e9afc676",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/material.json?$filter=price gt 10000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"material.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "price gt 10000"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "323184-57735802-3f24-434f-b5d6-37bd2e8844aa",
			"description": "Use this collection to get material details from your ServiceM8 setup."
		},
		{
			"name": "JobMaterial",
			"item": [
				{
					"name": "Job Materials",
					"id": "323184-a1fc10b1-d463-4c14-839b-910ea117e0e0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/jobmaterial.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"jobmaterial.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Name",
					"id": "323184-7537c6e7-7c7e-42a3-a94b-f53a15840ce6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/jobmaterial.json?$filter=name eq 'Labour'",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"jobmaterial.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "name eq 'Labour'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Price",
					"id": "323184-4cdcbbe0-0408-4924-be81-eb3009b2eb85",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/jobmaterial.json?$filter=price gt 50",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"jobmaterial.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "price gt 50"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "323184-b3777b25-4b98-431d-849a-2167136721e0",
			"description": "Use this collection to get Line items on a quote/invoice.  \n  \nFor more details please check ServiceM8 Official API documentation\n\n[https://developer.servicem8.com/docs/rest-overview](https://developer.servicem8.com/docs/rest-overview)"
		},
		{
			"name": "JobActivity",
			"item": [
				{
					"name": "Scheduled Booking",
					"item": [
						{
							"name": "Schedule Job Activity",
							"id": "323184-a033cf8f-df43-4b26-890e-50aeba4ee4d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api_1.0/jobmaterial.json?$filter=active eq 1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api_1.0",
										"jobmaterial.json"
									],
									"query": [
										{
											"key": "$filter",
											"value": "active eq 1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "323184-3d0900e6-680b-4d12-a502-3d61fb665022"
				},
				{
					"name": "Recorded Time",
					"item": [
						{
							"name": "Recorded Time",
							"id": "323184-75e60fdd-d3e0-43d2-9739-2a993c6c09a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api_1.0/jobactivity.json?$filter=active eq 1 and activity_was_scheduled eq 0",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api_1.0",
										"jobactivity.json"
									],
									"query": [
										{
											"key": "$filter",
											"value": "active eq 1 and activity_was_scheduled eq 0"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "323184-5e52ce80-8928-47e8-8692-462f60270449"
				}
			],
			"id": "323184-34d817e9-cc9b-4b75-af53-3bececfc8441",
			"description": "| Scheduled Booking | JobActivity  \n(`activity_was_scheduled` == 1) |\n\n| Recorded Time (check in to a job) | JobActivity  \n(`activity_was_scheduled` == 0) |"
		},
		{
			"name": "Vendor",
			"item": [
				{
					"name": "Vendor Details",
					"id": "323184-74325954-9ae3-475a-9b40-503b12572ed6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api_1.0/vendor.json?$filter=active eq 1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api_1.0",
								"vendor.json"
							],
							"query": [
								{
									"key": "$filter",
									"value": "active eq 1"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "323184-d9a88ac0-1aef-4d7d-9957-5c1e7435b988",
			"description": "Use this API to get ServiceM8 account details."
		},
		{
			"name": "Attachments",
			"item": [
				{
					"name": "Quotes, Invoices, Work Orders in the Job Diary",
					"item": [],
					"id": "323184-6ca65ff6-b8d5-4ffa-98d7-92e8b26ddf4c",
					"description": "Samples to read attachments like Quotes, Invoices, Work Orders in the Job Diary"
				},
				{
					"name": "Photos in the Job Diary",
					"item": [],
					"id": "323184-13f1522f-1ab2-4c9a-924d-7a771e0c6c4b",
					"description": "Read photos from the Job Diary"
				}
			],
			"id": "323184-e049e540-8eb5-4162-845a-503cc5717b7f"
		},
		{
			"name": "Get data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"id": "323184-d11aa3ba-22ab-4a19-a3dd-e2d91af36023",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Post data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						]
					}
				}
			],
			"id": "323184-b6fde441-f0f9-48fe-a503-52853417a1aa",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						]
					}
				}
			],
			"id": "323184-925409d6-72f0-4c79-8055-bf11fc95603b",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete data",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						]
					}
				}
			],
			"id": "323184-f1202f8f-2441-45d2-bfee-55125462c87b",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/info?id=1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"info"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "refreshRequestParams",
				"value": [
					{
						"key": "grant_type",
						"value": "refresh_token",
						"enabled": true,
						"send_as": "request_body"
					},
					{
						"key": "client_id",
						"value": "{{client_id}}",
						"enabled": true,
						"send_as": "request_body"
					},
					{
						"key": "client_secret",
						"value": "{{client_secret}}",
						"enabled": true,
						"send_as": "request_body"
					},
					{
						"key": "refresh_token",
						"value": "{{refresh_token}}",
						"enabled": true,
						"send_as": "request_body"
					}
				],
				"type": "any"
			},
			{
				"key": "refreshTokenUrl",
				"value": "https://go.servicem8.com/oauth/access_token",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "{{scope}}",
				"type": "string"
			},
			{
				"key": "state",
				"value": "10042025",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "queryParams",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "SM8-token",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{client_id}}",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "https://go.servicem8.com/oauth/access_token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "https://go.servicem8.com/oauth/authorize",
				"type": "string"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{client_secret}}",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6607041b-de03-44b3-965a-9301dfcd0d16",
				"type": "text/javascript",
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "52bb2878-c580-44d4-b233-e629cdf2e6aa",
				"type": "text/javascript",
				"requests": {},
				"exec": [
					"let responseData = pm.response.json();",
					"console.log(responseData);",
					"//pm.environment.set(\"access_token\", responseData.access_token);",
					"//pm.environment.set(\"refresh_token\", responseData.refresh_token);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://template.postman-echo.com"
		}
	]
}